name: "nix"
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # NB: this command does not recognise nix-darwin "warning: unknown flake output 'darwinPackages'"
  # check:
  #   name: "nix flake check"
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         extra_nix_config: |
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #     - uses: DeterminateSystems/magic-nix-cache-action@v9
  #       with:
  #         diagnostic-endpoint: ""
  #     - uses: cachix/cachix-action@v15
  #       with:
  #         name: mettavi
  #         # If you chose API tokens for write access OR if you have a private cache
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  #     - name: "nix flake check"
  #       run: |
  #         cd ./nix-darwin
  #         nix flake check -Lvv
  build:
    name: "nix build"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v9
        with:
          diagnostic-endpoint: ""
      - uses: cachix/cachix-action@v15
        with:
          name: mettavi
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: "nix build"
        run: |
          cd ./nix-darwin
          # nix-fast-build --cachix-cache mettavi -- --skip-cached --no-nom --flake ".#checks.$(nix eval --raw --impure --expr builtins.currentSystem)"
          nix build -Lvvv --no-update-lock-file --show-trace --print-build-logs .#darwinConfigurations."MVs-MBP".system
  # nix-develop:
  #   name: "nix develop"
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: DeterminateSystems/magic-nix-cache-action@v9
  #       with:
  #         diagnostic-endpoint: ""
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         extra_nix_config: |
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #     - uses: cachix/cachix-action@v15
  #       with:
  #         name: mettavi
  #         # If you chose API tokens for write access OR if you have a private cache
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  #     - name: "nix develop"
  #       run: |
  #         cd ./nix-darwin
  #         nix develop -Lvvv
  # format:
  #   name: "treefmt"
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         extra_nix_config: |
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #     - uses: DeterminateSystems/magic-nix-cache-action@v9
  #       with:
  #         diagnostic-endpoint: ""
  #     - uses: cachix/cachix-action@v15
  #       with:
  #         name: mettavi
  #         # If you chose API tokens for write access OR if you have a private cache
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  #     - name: "nix shell treefmt"
  #       run: nix develop .#fmtShell --command treefmt --fail-on-change
  # actionlint:
  #   name: "actionlint"
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         extra_nix_config: |
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #     - uses: DeterminateSystems/magic-nix-cache-action@v9
  #       with:
  #         diagnostic-endpoint: ""
  #     - uses: cachix/cachix-action@v15
  #       with:
  #         name: mettavi
  #         # If you chose API tokens for write access OR if you have a private cache
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  #     - name: "nix shell actionlint"
  #       run: nix develop .#actionlintShell --command actionlint
